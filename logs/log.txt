Starting new Ispell process /usr/bin/aspell with default dictionary...
Error enabling Flyspell mode:
(Error: The file "/usr/lib/aspell/en-common.rws" can not be opened for reading.)
error in process sentinel: progn: WakaTime Error (2)
error in process sentinel: WakaTime Error (2)
switch to buffer *mterm<3>*
Searching for ‘log.txt’....
(New file)
aborn/major-mode-key-binding done!
Starting new Ispell process /usr/bin/aspell with default dictionary...
Error enabling Flyspell mode:
(Error: The file "/usr/lib/aspell/en-common.rws" can not be opened for reading.)

error in process sentinel: progn: WakaTime Error (2)
error in process sentinel: WakaTime Error (2)
error in process sentinel: progn: WakaTime Error (2)
error in process sentinel: WakaTime Error (2)

Debugger entered--Lisp error: (error "WakaTime Error (2)")
  signal(error ("WakaTime Error (2)"))
  error("WakaTime Error (%s)" 2)
  (progn (error "WakaTime Error (%s)" exit-status))
  (if (and (not (= 0 exit-status)) (not (= 102 exit-status))) (progn (error "WakaTime Error (%s)" exit-status)))
  (when (and (not (= 0 exit-status)) (not (= 102 exit-status))) (error "WakaTime Error (%s)" exit-status))
  (let ((exit-status (process-exit-status process))) (when (and (not (= 0 exit-status)) (not (= 102 exit-status))) (error "WakaTime Error (%s)" exit-status)) (when (= 102 exit-status) (if nil (error "WakaTime Error (%s)" exit-status) (wakatime-prompt-api-key) (wakatime-call nil t))))
  (progn (kill-buffer (process-buffer process)) (let ((exit-status (process-exit-status process))) (when (and (not (= 0 exit-status)) (not (= 102 exit-status))) (error "WakaTime Error (%s)" exit-status)) (when (= 102 exit-status) (if nil (error "WakaTime Error (%s)" exit-status) (wakatime-prompt-api-key) (wakatime-call nil t)))))
  (if (memq (process-status process) (quote (exit signal))) (progn (kill-buffer (process-buffer process)) (let ((exit-status (process-exit-status process))) (when (and (not (= 0 exit-status)) (not (= 102 exit-status))) (error "WakaTime Error (%s)" exit-status)) (when (= 102 exit-status) (if nil (error "WakaTime Error (%s)" exit-status) (wakatime-prompt-api-key) (wakatime-call nil t))))))
  (when (memq (process-status process) (quote (exit signal))) (kill-buffer (process-buffer process)) (let ((exit-status (process-exit-status process))) (when (and (not (= 0 exit-status)) (not (= 102 exit-status))) (error "WakaTime Error (%s)" exit-status)) (when (= 102 exit-status) (if nil (error "WakaTime Error (%s)" exit-status) (wakatime-prompt-api-key) (wakatime-call nil t)))))
  (lambda (process signal) (when (memq (process-status process) (quote (exit signal))) (kill-buffer (process-buffer process)) (let ((exit-status (process-exit-status process))) (when (and (not (= 0 exit-status)) (not (= 102 exit-status))) (error "WakaTime Error (%s)" exit-status)) (when (= 102 exit-status) (if nil (error "WakaTime Error (%s)" exit-status) (wakatime-prompt-api-key) (wakatime-call nil t))))))(#<process Shell> "exited abnormally with code 2\n")

ELISP> (wakatime-client-command t)
"/usr/bin/python2 /usr/local/bin/wakatime --file \"nil\" --write --plugin emacs-wakatime/1.0.2 --key e191899f-9e2a-4d00-8100-4e9f9523decb --time 1476063658.33"

➜  ~ /usr/bin/python2 /usr/local/bin/wakatime --file \"nil\" --write --plugin emacs-wak
atime/1.0.2 --key e191899f-9e2a-4d00-8100-4e9f9523decb --time 1476063658.33
Error: Could not read from config file /home/aborn/.wakatime.cfg
➜  ~

[settings]
api_key = e191899f-9e2a-4d00-8100-4e9f9523decb
